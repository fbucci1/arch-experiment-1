Vagrant.configure("2") do |config|
    #Available images: https://app.vagrantup.com/ubuntu
    config.vm.box = "ubuntu/jammy64"
    config.vm.network "public_network", use_dhcp_assigned_default_route: true
    config.vm.provider "virtualbox" do |vb|
        vb.memory = 8192
        vb.cpus = 3
        vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
    config.vm.provision "shell", inline: <<-EOF
        echo "-------------- Now comes the good part! ----------------------------------------"
    EOF

    config.vm.define "microk8s_dev" do |microk8s_dev|
        microk8s_dev.vm.hostname = "microk8s-dev"
        microk8s_dev.vm.provider "virtualbox" do |vb|
            vb.name = "microk8s-dev"
        end
        #VM Port forwarding for ClusterIP (requires kubectl port-forward)
        microk8s_dev.vm.network "forwarded_port", guest: 20000, host: 10000, auto_correct: true
        microk8s_dev.vm.network "forwarded_port", guest: 20001, host: 10001, auto_correct: true
        microk8s_dev.vm.network "forwarded_port", guest: 20002, host: 10002, auto_correct: true
        microk8s_dev.vm.network "forwarded_port", guest: 20003, host: 10003, auto_correct: true
        microk8s_dev.vm.network "forwarded_port", guest: 20004, host: 10004, auto_correct: true
        #VM Port forwarding for NodePorts (does not require kubectl port-forward)
        microk8s_dev.vm.network "forwarded_port", guest: 30777, host: 11000, auto_correct: true
        microk8s_dev.vm.network "forwarded_port", guest: 30779, host: 11001, auto_correct: true
        microk8s_dev.vm.provision "file", source: "resources", destination: "/home/vagrant/resources"
        microk8s_dev.vm.provision "shell", inline: <<-EOF
            echo "-------------- Initializing ----------------------------"
            find /home/vagrant/resources -name "*.sh" -exec chmod +x {} \\; 
            echo "/home/vagrant/resources/onSessionStart.sh &" >> /home/vagrant/.bashrc
            echo "-------------- Initialize finished successfully------"
        EOF
    end

end

